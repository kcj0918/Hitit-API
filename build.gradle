buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.franzbecker:gradle-lombok:1.8")
	}
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.franzbecker.gradle-lombok'

group = 'me.hitit.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('com.auth0:java-jwt:3.2.0')
	compile('io.springfox:springfox-swagger2:2.2.2')
	compile('io.springfox:springfox-swagger-ui:2.2.2')
	compile('com.google.code.gson:gson:2.7')
	compileOnly('org.projectlombok:lombok')
	compile('com.querydsl:querydsl-core')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-jpa')
}

jar {
    manifest {
        attributes  'Title': 'hitit', 'Version': '1.0.0', 'Main-Class': 'me.hitit.api.HititApplication'
    }
    archiveName 'hitit.jar'
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

def queryDslOutput = file("src/main/generated")

sourceSets {
	main {
		java {
			srcDir queryDslOutput
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
	source = sourceSets.main.java
	classpath = configurations.compile
	destinationDir = queryDslOutput
	options.compilerArgs = [
			"-proc:only",
			"-processor", 'com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
	]
}

compileJava.dependsOn(generateQueryDSL)

clean {
	delete queryDslOutput
}